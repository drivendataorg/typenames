[project]
name = "typenames"
version = "1.4.0"
description = "String representations of type annotations."
readme = "README.md"
authors = [{ name = "Jay Qi", email = "jayqi.opensource@gmail.com" }]
license = { file = "LICENSE" }
keywords = ["typing", "type hints", "type annotations", "pep 585", "pep 604"]
classifiers = [
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9"

[project.optional-dependencies]
tests = ["pytest>=6"]

[project.urls]
"Homepage" = "https://jayqi.github.io/typenames/"
"Repository" = "https://github.com/drivendataorg/typenames"
"Documentation" = "https://jayqi.github.io/typenames/"
"Bug Tracker" = "https://github.com/drivendataorg/typenames/issues"
"Changelog" = "https://jayqi.github.io/typenames/stable/changelog/"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

## DEV

[dependency-groups]
dev = [
  { include-group = "lint" },
  { include-group = "docs" },
  "ipython",
  "reprexlite",
  "vspect",
]
lint = [
  "ruff",
]
typecheck = [
  "mypy",
]
tests = [
  "pytest",
  "coverage",
  "pytest-cov",
]
docs = [
  "mkdocs",
  "mkdocs-macros-plugin",
  "mkdocs-material",
  "mike",
  "mkdocstrings[python]",
  "mdx-truly-sane-lists",
]
inspect-types = [
  "ipykernel",
  "nbconvert",
]

## TOOLS ##

[tool.ruff]
line-length = 99
src = ["typenames", "tests"]

[tool.ruff.lint]
select = [
  "E", # Pyflakes
  "F", # Pycodestyle
  "I", # isort
]
unfixable = ["F"]

[tool.ruff.lint.isort]
known-first-party = ["typenames"]
force-sort-within-sections = true

[tool.mypy]
files = ["typenames", "tests/typechecks.py"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=typenames --cov-report=term --cov-report=html --cov-report=xml"
testpaths = ["tests"]

[tool.coverage.run]
source = ["typenames"]

[tool.coverage.paths]
typenames = [
  "typenames/",
  "*/site-packages/typenames/"
]
